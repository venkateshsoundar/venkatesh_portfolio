name: Keep Streamlit Awake

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes UTC
  workflow_dispatch:

concurrency:
  group: keep-streamlit-awake
  cancel-in-progress: true

jobs:
  wake:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright
        run: |
          npm init -y
          npm install playwright
          npx playwright install --with-deps chromium

      - name: Wake only if sleeping
        env:
          APP_URL: "https://venkateshbalu.streamlit.app/?keepalive=${{ github.run_id }}"
        run: |
          node - <<'NODE'
          const { chromium } = require('playwright');

          (async () => {
            const browser = await chromium.launch();
            const page = await browser.newPage();
            await page.goto(process.env.APP_URL, { waitUntil: 'domcontentloaded', timeout: 60000 });

            async function isAwake() {
              return (await page.locator('div[data-testid="stAppViewContainer"], div.stApp').count()) > 0;
            }

            if (await isAwake()) {
              console.log('App already awake. Nothing to do.');
              await browser.close();
              process.exit(0);
            }

            // Try exact wake button first
            let clicked = false;
            const exact = page.locator('button:has-text("Yes, get this app back up!")').first();
            if (await exact.count()) {
              console.log('Sleeping screen detected. Clicking wake button.');
              await exact.click();
              clicked = true;
            } else {
              // Fallback regex options
              const patterns = [/wake up/i, /wake/i, /start app/i, /resume/i, /launch/i];
              for (const re of patterns) {
                const btn = page.getByRole('button', { name: re }).first();
                if (await btn.count()) {
                  console.log('Sleeping screen detected. Clicking:', re);
                  await btn.click();
                  clicked = true;
                  break;
                }
              }
            }

            if (!clicked) {
              console.log('No wake button found. Maybe already starting.');
              await browser.close();
              process.exit(0);
            }

            // Wait up to 2 mins for app to load
            const deadline = Date.now() + 120000;
            while (Date.now() < deadline && !(await isAwake())) {
              await page.waitForTimeout(1500);
            }

            if (await isAwake()) {
              console.log('App woke successfully.');
            } else {
              console.log('Wake clicked, but app not ready yet (will retry next run).');
            }

            await browser.close();
            process.exit(0);
          })().catch(err => { console.error(err); process.exit(1); });
          NODE
